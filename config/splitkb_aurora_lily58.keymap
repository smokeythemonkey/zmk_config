/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&mt {
        tapping-term-ms = <200>;
    };

&soft_off {
    hold-time-ms = <5000>;
};

/ {
    conditional_layers{
        compatible = "zmk,conditional-layers";
        util_layer{
            if-layers = <1 2>;
            then-layer= <3>;
        };
    };

    behaviors {
        td0: tap_dance_shift_caps {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LSHFT>, <&caps_word>;
        };
        td1: tap_dance_grave_escape {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells= <0>;
            tapping-term-ms = <200>;
            bindings = <&kp GRAVE>, <&ESC>;
        };
    };    

    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   =   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
// | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | CTRL  |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |   \   |
//                     | ALT  | DEL  | RAISE|  SPACE |  | ENTER | LOWER| BSPC  | GUI   |
            bindings = <
&td1      &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                                   &kp N6    &kp N7   &kp N8    &kp N9  &kp N0   &kp EQUAL
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                                    &kp Y     &kp U    &kp I     &kp O   &kp P    &kp MINUS
&td0      &kp A  &kp S  &kp D    &kp F    &kp G                                    &kp H     &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LCTRL &kp Z  &kp X  &kp C    &kp V    &kp B  &mt LPAR LBKT   &mt RPAR RBKT     &kp N     &kp M    &kp COMMA &kp DOT &kp FSLH &kp BSLH
                        &kp LALT &kp DEL  &mo 2  &mt SPACE LGUI  &mt LSHIFT RET    &kp LGUI  &kp BSPC &mo 1
            >;
        };

        lower_layer {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |       |       |      |       |       |
// |  F7   |  F8 |  F9 |  F10 |  F11 |  F12 |                   |  =   |  +    |  -    |  *   |       |       |
// |       |     |     |      |      |      |        |  |       | `    |  ~    |       |      |       |       |
//                     |      |      |      |        |  |       |      |       |       |
            bindings = <
&trans     &none        &none         &none         &none        &none                        &none     &none       &none           &none     &none     &none
&kp F1     &kp F2       &kp F3        &kp F4        &kp F5       &kp F6                       &none     &none       &none           &none     &none     &none 
&kp F7     &kp F8       &kp F9        &kp F10       &kp F11      &kp F12                      &kp EQUAL &kp PLUS    &kp MINUS       &kp STAR  &none     &none 
&trans     &none        &none         &none         &none        &none     &trans   &trans    &kp GRAVE &kp TILDE   &none           &none     &none     &none
                                      &trans        &trans       &trans    &trans   &trans    &trans    &trans     &trans
            >;            
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     |     |     |      |      |      |                   |      |       |       |      |       |       |
// |     |     |     |      |      |      |                   |      |       |       |      |       |       |
// |     |     |  <- | v    |  ^   |  ->  |                   |   <- |   v   |  ^    |  ->  |       |       |
// |     |     | HOME|PG_DN | PG_UP| END  |      |    |       | HOME | PG_DN | PG_UP |  END |       |       |
//                   |      |      |      |      |    |       |      |       |       |
            bindings = <
&trans &none      &none       &none        &none            &none                            &none       &none     &none     &none     &none     &none
&trans &none      &none       &none        &none            &none                            &none       &none     &none     &none     &none     &none
&trans &none      &kp LEFT    &kp DOWN     &kp UP           &kp RIGHT                        &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT &none     &none
&trans &none      &kp HOME    &kp PG_DN    &kp PG_UP        &kp END       &trans   &trans    &kp HOME    &kp PG_DN &kp PG_UP &kp END   &none     &none
                              &trans  &trans  &trans        &trans                           &trans    &trans      &trans    &trans
            >;            
        };

        util_layer {
            
// ------------------------------------------------------------------------------------------------------------
// | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |SOFTOFF|       |       |      |       |BT CLALL|
// |       |     |     |  PP  |      |VOL_UP|                   |BRI_UP |       |       |      |       |        |
// |       |PSCRN|PREV |STOP  |NEXT  | MUTE |                   |BRI_MIN|       |       |      |       |        |
// |       |     |     |      |      |VOL_DN|      |    |       |BRI_DN |       |       |      |       |        |
//                     |      |      |      |      |    |       |       |       |       |
            bindings = <
&bt BT_CLR        &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4                       &soft_off      &none     &none     &none     &none     &bt BT_CLR
&trans            &none            &none            &kp K_PP          &none             &kp C_VOL_UP                       &kp C_BRI_UP   &none     &none     &none     &none     &none
&trans            &kp PSCRN        &kp C_PREV       &kp C_STOP        &kp C_NEXT        &kp C_MUTE                         &kp C_BRI_MIN  &none     &none     &none     &none     &none
&trans            &none            &none            &none             &none             &kp C_VOL_DN     &trans  &trans    &kp C_BRI_DN   &none     &none     &none     &none     &none
                                   &trans           &trans            &trans            &trans                             &trans         &trans    &trans    &trans
            >;
        };
    };
};